{"version":3,"sources":["webpack:///./src/templates/BlogPostsListTemplate.tsx","webpack:///./src/components/Sidebar.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/utils/tags.js","webpack:///./src/components/CategoryTag.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./src/components/PostsList.tsx","webpack:///./src/components/Layout.tsx"],"names":["useStyles","createUseStyles","theme","pageContainer","padding","pagePadding","marginTop","display","justifyContent","flexDirection","postsListContainer","width","BlogPostsListTemplate","data","pageContext","classes","location","useTheme","parsedTags","tag","substring","length","title","className","listTitle","posts","allMarkdownRemark","edges","tags","tagTitle","allTags","pageQuery","sidebar","tagsContainer","otherPosts","subtitle","categoryTag","marginBottom","Sidebar","newTags","Object","keys","tagCategories","console","log","map","text","size","previous","next","post","hasOwn","hasOwnProperty","classNames","i","arguments","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","music","backgroundColor","color","software","misc","getTagSizeFromString","height","fontSize","borderRadius","sizing","textAlign","fontFamily","fontWeight","lineHeight","margin","marginRight","textDecoration","clickable","opacity","cursor","CategoryTag","to","postCard","boxShadow","boxSizing","overflow","postTitle","titleSize","descSize","postCardLink","postCardInfo","postDesc","colors","textSecondary","truncDesc","textOverflow","whiteSpace","postDate","textTransform","marginLeft","PostCard","getSizeFromString","frontmatter","slice","fields","slug","date","description","PostsList","node","Layout","children","hideTitle"],"mappings":"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","file":"component---src-templates-blog-posts-list-template-tsx-4d55e74cb0d4987772cf.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport PostsList from '../components/PostsList';\nimport SEO from '../components/seo';\n\ntype Data = {\n  allMarkdownRemark: {\n    totalCount: number;\n    edges: {\n      node: {\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          title: string;\n          description: string;\n          date: string;\n        };\n      };\n    }[];\n  };\n  tag?: string;\n};\n\n\nconst useStyles = createUseStyles((theme) => ({\n  pageContainer: {\n    padding: theme.pagePadding,\n    marginTop: 50,\n    display: 'flex',\n    justifyContent: 'space-between',\n    '@media (max-width: 768px)': {\n      padding: '2rem',\n      flexDirection: 'column',\n    },\n  },\n  postsListContainer: {\n    width: '70%',\n    '@media (max-width: 768px)': {\n      width: '100%',\n    },\n  },\n}));\n\nfunction BlogPostsListTemplate({ data, pageContext, location }: PageProps<Data>): ReactElement {\n  const classes = useStyles({ theme: useTheme() });\n  // const siteTitle = data.site.siteMetadata.title;\n  const parsedTags = pageContext.tag && [pageContext.tag.substring(1, pageContext.tag.length - 1)];\n  return (\n    <Layout>\n      <SEO\n        title=\"blog posts\"\n      />\n      <div className={classes.pageContainer}>\n        <PostsList className={classes.postsListContainer} listTitle=\"blog posts\" posts={data.allMarkdownRemark.edges} />\n        <Sidebar tags={parsedTags} tagTitle=\"filter by tags\" allTags={!pageContext.tag} />\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogPostsListTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String = \"//\") {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { regex: $tag } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            date(formatString: \"MMMM DD YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { ReactElement } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CategoryTag from './CategoryTag';\nimport { tagCategories } from '../utils/tags';\n\nimport PostCard from './PostCard';\n\nconst useStyles = createUseStyles((theme) => ({\n  sidebar: {\n    width: '25%',\n    display: 'flex',\n    flexDirection: 'column',\n    '@media (max-width: 768px)': {\n      width: '100%',\n    },\n  },\n  tagsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  otherPosts: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 50,\n  },\n  subtitle: {\n    ...theme.subtitle,\n  },\n  categoryTag: {\n    marginBottom: 15,\n  },\n}));\n\ntype SidebarProps = {\n  tags?: string[];\n  tagTitle: string;\n  pageContext?: {\n    previous: {\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n    next: {\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n  };\n  allTags?: boolean;\n}\n\nfunction Sidebar({\n  tags, pageContext, tagTitle, allTags = false,\n}: SidebarProps): ReactElement {\n  const classes = useStyles({ theme: useTheme() });\n  let newTags = tags;\n  if (allTags) {\n    newTags = Object.keys(tagCategories);\n  }\n  console.log(newTags);\n  return (\n    <div className={classes.sidebar}>\n      <div className={classes.tagsContainer}>\n        <h2 className={classes.subtitle}>{tagTitle}</h2>\n        {newTags && newTags.map((tag) => (\n          <CategoryTag\n            className={classes.categoryTag}\n            text={tag}\n            size=\"L\"\n          />\n        ))}\n      </div>\n      {pageContext && pageContext.previous && pageContext.next && (\n        <div className={classes.otherPosts}>\n          <h2 className={classes.subtitle}>other posts</h2>\n          <PostCard post={pageContext.previous} size=\"S\" />\n          <PostCard post={pageContext.next} size=\"S\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","exports.tagCategories = {\n  music: {\n    backgroundColor: '#FFD39F',\n    color: '#B06000',\n  },\n  software: {\n    backgroundColor: '#BFF49F',\n    color: '#2F7C00',\n  },\n  misc: {\n    backgroundColor: '#95C6FF',\n    color: '#00479B',\n  },\n};\n\nexports.getTagSizeFromString = (size) => {\n  switch (size) {\n    case 'S':\n      return {\n        width: 50,\n        height: 15,\n        fontSize: 9,\n      };\n    case 'L':\n      return {\n        width: 150,\n        height: 30,\n        fontSize: 18,\n      };\n    default:\n      return {\n        width: 100,\n        height: 20,\n        fontSize: 11,\n      };\n  }\n};\n","import React, { ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { tagCategories, getTagSizeFromString } from '../utils/tags';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nconst useStyles = createUseStyles({\n  categoryTag: {\n    borderRadius: 16,\n    color: (({ color }): object => color.color),\n    backgroundColor: (({ color }): object => color.backgroundColor),\n    width: ({ sizing }): number => sizing.width,\n    textAlign: 'center',\n    fontSize: ({ sizing }): number => sizing.fontSize,\n    fontFamily: 'Roboto',\n    fontWeight: '300',\n    lineHeight: 1.8,\n    height: ({ sizing }): number => sizing.height,\n    margin: 0,\n    marginRight: 10,\n    textDecoration: 'none',\n  },\n  clickable: {\n    '&:hover': {\n      opacity: '0.7',\n      cursor: 'pointer',\n    },\n  },\n});\n\ntype CategoryTagProps = {\n  text: string;\n  size: 'S' | 'M' | 'L';\n  className?: string;\n  clickable?: boolean;\n}\n\nconst CategoryTag = ({\n  text, size, className, clickable = true,\n}: CategoryTagProps): ReactElement => {\n  const color = text && tagCategories[text]\n    ? tagCategories[text]\n    : tagCategories.misc;\n  const classes = useStyles({\n    color,\n    clickable,\n    sizing: getTagSizeFromString(size),\n  });\n  if (clickable) {\n    return (\n      <Link\n        to={clickable && `/blog/${text}`}\n        className={classNames(\n          classes.categoryTag,\n          classes.clickable,\n          className,\n        )}\n      >\n        {text}\n      </Link>\n    );\n  }\n  return (\n    <p\n      className={classNames(\n        classes.categoryTag,\n        className,\n      )}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default CategoryTag;\n","import React, { ReactElement } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Link } from 'gatsby';\n\nimport CategoryTag from './CategoryTag';\n\nconst getSizeFromString = (size) => {\n  switch (size) {\n    case 'S':\n      return {\n        height: 100,\n        titleSize: 13,\n        descSize: 10,\n        truncDesc: true,\n      };\n    default:\n      return {\n        height: 150,\n        titleSize: 18,\n        descSize: 13,\n      };\n  }\n};\n\ntype PostCardProps = {\n  post: {\n    frontmatter: {\n      title: string;\n      date: string;\n      description: string;\n      tags: string[];\n    };\n    fields: {\n      slug: string;\n    };\n    excerpt: string;\n  };\n  size?: 'S' | 'M';\n}\n\nconst useStyles = createUseStyles((theme) => ({\n  postCard: {\n    width: '100%',\n    height: ({ sizing }): number => sizing.height,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n    borderRadius: '22px',\n    color: 'black',\n    padding: '1rem 2rem',\n    boxSizing: 'border-box',\n    marginBottom: 20,\n    overflow: 'hidden',\n    '&:hover': {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.5)',\n    },\n  },\n  postTitle: {\n    fontFamily: 'Roboto',\n    fontWeight: 'bold',\n    fontSize: ({ sizing }): number => sizing.titleSize,\n    margin: ({ sizing }): string => `${sizing.descSize + 2}px 0`,\n  },\n  postCardLink: {\n    textDecoration: 'none',\n  },\n  postCardInfo: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  postDesc: {\n    fontFamily: 'Lato',\n    fontSize: ({ sizing }): number => sizing.descSize,\n    color: theme.colors.textSecondary,\n    overflow: ({ sizing }): string => sizing.truncDesc && 'hidden',\n    textOverflow: ({ sizing }): string => sizing.truncDesc && 'ellipsis',\n    whiteSpace: ({ sizing }): string => sizing.truncDesc && 'nowrap',\n  },\n  postDate: {\n    fontFamily: 'Roboto',\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n    textTransform: 'lowercase',\n    margin: 0,\n    marginLeft: 'auto',\n  },\n}));\n\nfunction PostCard({ post, size = 'M' }: PostCardProps): ReactElement {\n  if (!post) return null;\n  const sizing = getSizeFromString(size);\n  const classes = useStyles({ sizing, theme: useTheme() });\n  let newTags = post.frontmatter.tags;\n  if (size === 'S' && post.frontmatter.tags) {\n    newTags = post.frontmatter.tags.slice(0, 2);\n  }\n\n  return (\n    <Link className={classes.postCardLink} to={post.fields.slug}>\n      <div className={classes.postCard}>\n        <div className={classes.postCardInfo}>\n          {newTags && newTags.map((tag) => (\n            <CategoryTag\n              text={tag}\n              size={size}\n              clickable={false}\n            />\n          ))}\n          <p className={classes.postDate}>{post.frontmatter.date}</p>\n        </div>\n        <h3 className={classes.postTitle}>{post.frontmatter.title}</h3>\n        <p className={classes.postDesc}>{post.frontmatter.description}</p>\n      </div>\n    </Link>\n  );\n}\n\nexport default PostCard;\n","import React, { ReactElement } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Link } from \"gatsby\";\n\nimport PostCard from './PostCard';\n\ntype PostsListProps = {\n  posts: {\n    node: {\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n  }[];\n  listTitle: string;\n  className: string;\n}\n\nconst useStyles = createUseStyles((theme) => ({\n  subtitle: {\n    ...theme.subtitle,\n  },\n}));\n\nfunction PostsList({ posts, listTitle, className }: PostsListProps): ReactElement {\n  const classes = useStyles({ theme: useTheme() });\n  console.log(posts);\n  return (\n    <div className={className}>\n      <h2 className={classes.subtitle}>{listTitle}</h2>\n      {posts.map(({ node }) => <PostCard post={node} />)}\n    </div>\n  );\n}\n\nexport default PostsList;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Navbar from './Navbar';\n\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      <Navbar hideTitle={false} />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}