{"version":3,"sources":["webpack:///./src/components/Sidebar.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./src/utils/tags.js","webpack:///./src/components/CategoryTag.tsx","webpack:///./src/templates/BlogPostTemplate.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./src/components/Layout.tsx"],"names":["useStyles","createUseStyles","theme","sidebar","width","display","flexDirection","tagsContainer","otherPosts","marginTop","subtitle","categoryTag","marginBottom","Sidebar","tags","pageContext","tagTitle","allTags","classes","useTheme","newTags","Object","keys","tagCategories","className","map","tag","text","size","previous","next","post","hasOwn","hasOwnProperty","classNames","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","music","backgroundColor","color","software","misc","getTagSizeFromString","height","fontSize","borderRadius","sizing","textAlign","fontFamily","fontWeight","lineHeight","margin","marginRight","textDecoration","clickable","opacity","cursor","CategoryTag","to","postContainer","postTitle","postDate","pageContainer","padding","pagePadding","justifyContent","bodySection","colors","textPrimary","textList","borderColor","textSecondary","borderLeft","paddingLeft","fontStyle","borderSpacing","borderTop","border","BlogPostTemplate","data","location","markdownRemark","siteTitle","site","siteMetadata","title","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","pageQuery","postCard","boxShadow","boxSizing","overflow","titleSize","descSize","postCardLink","postCardInfo","postDesc","truncDesc","textOverflow","whiteSpace","textTransform","marginLeft","PostCard","getSizeFromString","slice","fields","slug","Layout","children","hideTitle"],"mappings":"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","file":"component---src-templates-blog-post-template-tsx-b73e26215f581e9508aa.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CategoryTag from './CategoryTag';\nimport { tagCategories } from '../utils/tags';\n\nimport PostCard from './PostCard';\n\nconst useStyles = createUseStyles((theme) => ({\n  sidebar: {\n    width: '25%',\n    display: 'flex',\n    flexDirection: 'column',\n    '@media (max-width: 768px)': {\n      width: '100%',\n    },\n  },\n  tagsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  otherPosts: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 50,\n  },\n  subtitle: {\n    ...theme.subtitle,\n  },\n  categoryTag: {\n    marginBottom: 15,\n  },\n}));\n\ntype SidebarProps = {\n  tags?: string[];\n  tagTitle: string;\n  pageContext?: {\n    previous: {\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n    next: {\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n  };\n  allTags?: boolean;\n}\n\nfunction Sidebar({\n  tags, pageContext, tagTitle, allTags = false,\n}: SidebarProps): ReactElement {\n  const classes = useStyles({ theme: useTheme() });\n  let newTags = tags;\n  if (allTags) {\n    newTags = Object.keys(tagCategories);\n  }\n  return (\n    <div className={classes.sidebar}>\n      <div className={classes.tagsContainer}>\n        <h2 className={classes.subtitle}>{tagTitle}</h2>\n        {newTags && newTags.map((tag) => (\n          <CategoryTag\n            className={classes.categoryTag}\n            text={tag}\n            size=\"L\"\n          />\n        ))}\n      </div>\n      {pageContext && pageContext.previous && pageContext.next && (\n        <div className={classes.otherPosts}>\n          <h2 className={classes.subtitle}>other posts</h2>\n          <PostCard post={pageContext.previous} size=\"S\" />\n          <PostCard post={pageContext.next} size=\"S\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","exports.tagCategories = {\n  music: {\n    backgroundColor: '#FFD39F',\n    color: '#B06000',\n  },\n  software: {\n    backgroundColor: '#BFF49F',\n    color: '#2F7C00',\n  },\n  misc: {\n    backgroundColor: '#95C6FF',\n    color: '#00479B',\n  },\n};\n\nexports.getTagSizeFromString = (size) => {\n  switch (size) {\n    case 'S':\n      return {\n        width: 50,\n        height: 15,\n        fontSize: 9,\n      };\n    case 'L':\n      return {\n        width: 150,\n        height: 30,\n        fontSize: 18,\n      };\n    default:\n      return {\n        width: 100,\n        height: 20,\n        fontSize: 11,\n      };\n  }\n};\n","import React, { ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { tagCategories, getTagSizeFromString } from '../utils/tags';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nconst useStyles = createUseStyles({\n  categoryTag: {\n    borderRadius: 16,\n    color: (({ color }): object => color.color),\n    backgroundColor: (({ color }): object => color.backgroundColor),\n    width: ({ sizing }): number => sizing.width,\n    textAlign: 'center',\n    fontSize: ({ sizing }): number => sizing.fontSize,\n    fontFamily: 'Roboto',\n    fontWeight: '300',\n    lineHeight: 1.8,\n    height: ({ sizing }): number => sizing.height,\n    margin: 0,\n    marginRight: 10,\n    textDecoration: 'none',\n  },\n  clickable: {\n    '&:hover': {\n      opacity: '0.7',\n      cursor: 'pointer',\n    },\n  },\n});\n\ntype CategoryTagProps = {\n  text: string;\n  size: 'S' | 'M' | 'L';\n  className?: string;\n  clickable?: boolean;\n}\n\nconst CategoryTag = ({\n  text, size, className, clickable = true,\n}: CategoryTagProps): ReactElement => {\n  const color = text && tagCategories[text]\n    ? tagCategories[text]\n    : tagCategories.misc;\n  const classes = useStyles({\n    color,\n    clickable,\n    sizing: getTagSizeFromString(size),\n  });\n  if (clickable) {\n    return (\n      <Link\n        to={clickable && `/blog/${text}`}\n        className={classNames(\n          classes.categoryTag,\n          classes.clickable,\n          className,\n        )}\n      >\n        {text}\n      </Link>\n    );\n  }\n  return (\n    <p\n      className={classNames(\n        classes.categoryTag,\n        className,\n      )}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default CategoryTag;\n","import React, { ReactElement } from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Sidebar from '../components/Sidebar';\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  markdownRemark: {\n    id: string;\n    excerpt: string;\n    html: string;\n    frontmatter: {\n      title: string;\n      date: string;\n      description: string;\n      tags: string[];\n    };\n  };\n};\n\nconst useStyles = createUseStyles((theme) => ({\n  postContainer: {\n    width: '70%',\n    '@media (max-width: 768px)': {\n      width: '100%',\n    },\n  },\n  postTitle: {\n    fontFamily: 'Roboto',\n    fontSize: '36px',\n    fontWeight: 'bold',\n    '@media (max-width: 768px)': {\n      fontSize: '24px',\n    },\n  },\n  postDate: {\n    ...theme.subtitle,\n    fontSize: 20,\n  },\n  pageContainer: {\n    padding: theme.pagePadding,\n    marginTop: 50,\n    display: 'flex',\n    justifyContent: 'space-between',\n    '@media (max-width: 768px)': {\n      flexDirection: 'column',\n    },\n  },\n  bodySection: {\n    color: theme.colors.textPrimary,\n    '& h1, h2, h3, h4, h5, h6': {\n      fontFamily: 'Roboto',\n      fontWeight: 'bold',\n    },\n    '& p, li, table, figcaption': {\n      fontFamily: 'Lato',\n      fontWeight: '400',\n    },\n    '& a': {\n      color: theme.colors.textPrimary,\n    },\n    '& blockquote': {\n      color: theme.colors.textList,\n      borderColor: theme.colors.textSecondary,\n      borderLeft: '3px solid',\n      paddingLeft: '10px',\n      fontSize: 18,\n      fontStyle: 'italic',\n    },\n    '& li > p': {\n      marginBottom: 0,\n    },\n    '& table': {\n      margin: '20px 0',\n      borderSpacing: '0',\n      '& tr': {\n        borderTop: '1px solid #c6cbd1',\n      },\n      '& td, th': {\n        border: '1px solid #dfe2e5',\n        padding: '6px 13px',\n      },\n      '& tr:nth-child(2n)': {\n        backgroundColor: '#f6f8fa',\n      },\n    },\n    '& figcaption': {\n      textAlign: 'center',\n      fontStyle: 'italic',\n      color: theme.colors.textList,\n    },\n  },\n}));\n\nconst BlogPostTemplate = ({ data, pageContext, location }: PageProps<Data>): ReactElement => {\n  const classes = useStyles({ theme: useTheme() });\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className={classes.pageContainer}>\n        <article className={classes.postContainer}>\n          <header>\n            <h1 className={classes.postTitle}>\n              {post.frontmatter.title}\n            </h1>\n            <p className={classes.postDate}>\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section\n            className={classes.bodySection}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n        </article>\n        <Sidebar tags={post.frontmatter.tags} tagTitle=\"tags\" pageContext={pageContext} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n","import React, { ReactElement } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Link } from 'gatsby';\n\nimport CategoryTag from './CategoryTag';\n\nconst getSizeFromString = (size) => {\n  switch (size) {\n    case 'S':\n      return {\n        height: 100,\n        titleSize: 13,\n        descSize: 10,\n        truncDesc: true,\n      };\n    default:\n      return {\n        height: 150,\n        titleSize: 18,\n        descSize: 13,\n      };\n  }\n};\n\ntype PostCardProps = {\n  post: {\n    frontmatter: {\n      title: string;\n      date: string;\n      description: string;\n      tags: string[];\n    };\n    fields: {\n      slug: string;\n    };\n    excerpt: string;\n  };\n  size?: 'S' | 'M';\n}\n\nconst useStyles = createUseStyles((theme) => ({\n  postCard: {\n    width: '100%',\n    height: ({ sizing }): number => sizing.height,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n    borderRadius: '22px',\n    color: 'black',\n    padding: '1rem 2rem',\n    boxSizing: 'border-box',\n    marginBottom: 20,\n    overflow: 'hidden',\n    '&:hover': {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.5)',\n    },\n  },\n  postTitle: {\n    fontFamily: 'Roboto',\n    fontWeight: 'bold',\n    fontSize: ({ sizing }): number => sizing.titleSize,\n    margin: ({ sizing }): string => `${sizing.descSize + 2}px 0`,\n  },\n  postCardLink: {\n    textDecoration: 'none',\n  },\n  postCardInfo: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  postDesc: {\n    fontFamily: 'Lato',\n    fontSize: ({ sizing }): number => sizing.descSize,\n    color: theme.colors.textSecondary,\n    overflow: ({ sizing }): string => sizing.truncDesc && 'hidden',\n    textOverflow: ({ sizing }): string => sizing.truncDesc && 'ellipsis',\n    whiteSpace: ({ sizing }): string => sizing.truncDesc && 'nowrap',\n  },\n  postDate: {\n    fontFamily: 'Roboto',\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n    textTransform: 'lowercase',\n    margin: 0,\n    marginLeft: 'auto',\n  },\n}));\n\nfunction PostCard({ post, size = 'M' }: PostCardProps): ReactElement {\n  if (!post) return null;\n  const sizing = getSizeFromString(size);\n  const classes = useStyles({ sizing, theme: useTheme() });\n  let newTags = post.frontmatter.tags;\n  if (size === 'S' && post.frontmatter.tags) {\n    newTags = post.frontmatter.tags.slice(0, 2);\n  }\n\n  return (\n    <Link className={classes.postCardLink} to={post.fields.slug}>\n      <div className={classes.postCard}>\n        <div className={classes.postCardInfo}>\n          {newTags && newTags.map((tag) => (\n            <CategoryTag\n              text={tag}\n              size={size}\n              clickable={false}\n            />\n          ))}\n          <p className={classes.postDate}>{post.frontmatter.date}</p>\n        </div>\n        <h3 className={classes.postTitle}>{post.frontmatter.title}</h3>\n        <p className={classes.postDesc}>{post.frontmatter.description}</p>\n      </div>\n    </Link>\n  );\n}\n\nexport default PostCard;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Navbar from './Navbar';\n\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      <Navbar hideTitle={false} />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}